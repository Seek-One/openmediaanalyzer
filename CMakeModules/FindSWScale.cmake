# - Find libswscale
# Find the native libswscale includes and library
# This module defines
#  SWSCALE_INCLUDE_DIRS, where to find swscale.h, etc.
#  SWSCALE_LIBRARIES, the libraries needed to use SWSCALE.
#  SWSCALE_RUNTIME_LIBRARY_PATH - where to find runtime libraries (WIN32)
#  SWSCALE_FOUND, If false, do not try to use SWSCALE.


if(WIN32)
	FIND_PATH(DEFAULT_SWSCALE_INCLUDE_DIR libswscale/swscale.h)
else(WIN32)
	FIND_PATH(DEFAULT_SWSCALE_INCLUDE_DIR libswscale/swscale.h PATHS /usr/local/include /usr/include)
endif(WIN32)
if(WIN32 AND DEFAULT_SWSCALE_INCLUDE_DIR)
	set(SWSCALE_RUNTIME_LIBRARY_PATH ${DEFAULT_SWSCALE_INCLUDE_DIR}/../bin)
endif(WIN32 AND DEFAULT_SWSCALE_INCLUDE_DIR)

SET(SWSCALE_NAMES ${SWSCALE_NAMES} swscale)
FIND_LIBRARY(DEFAULT_SWSCALE_LIBRARY
    NAMES ${SWSCALE_NAMES}
    PATHS /usr/lib /usr/local/lib
)

IF (DEFAULT_SWSCALE_LIBRARY AND DEFAULT_SWSCALE_INCLUDE_DIR)
    SET(SWSCALE_INCLUDE_DIRS ${DEFAULT_SWSCALE_INCLUDE_DIR})
    SET(SWSCALE_LIBRARIES ${DEFAULT_SWSCALE_LIBRARY})
    SET(SWSCALE_FOUND TRUE)
ELSE (DEFAULT_SWSCALE_LIBRARY AND DEFAULT_SWSCALE_INCLUDE_DIR)
    SET(SWSCALE_FOUND FALSE)
ENDIF (DEFAULT_SWSCALE_LIBRARY AND DEFAULT_SWSCALE_INCLUDE_DIR)

# Get the version
get_filename_component(DEFAULT_SWSCALE_LIBRARY_REALPATH ${DEFAULT_SWSCALE_LIBRARY} REALPATH)
string(REGEX REPLACE ".*\\.so\\.(.*)" "\\1" SWSCALE_VERSION ${DEFAULT_SWSCALE_LIBRARY_REALPATH})
if(SWSCALE_VERSION)
    string(REGEX REPLACE "([0-9]+).*" "\\1" SWSCALE_VERSION_MAJOR ${SWSCALE_VERSION})
    string(REGEX REPLACE "[0-9]+\\.([0-9]+).*" "\\1" SWSCALE_VERSION_MINOR ${SWSCALE_VERSION})
endif(SWSCALE_VERSION)

IF (SWSCALE_FOUND)
    IF (NOT SWSCALE_FIND_QUIETLY)
        MESSAGE(STATUS "Found libswscale: ${SWSCALE_LIBRARIES}")
    ENDIF (NOT SWSCALE_FIND_QUIETLY)
ELSE (SWSCALE_FOUND)
    IF (SWSCALE_FIND_REQUIRED)
        MESSAGE(FATAL_ERROR "Could not find libswscale")
    ENDIF (SWSCALE_FIND_REQUIRED)
ENDIF (SWSCALE_FOUND)

MARK_AS_ADVANCED(
  SWSCALE_LIBRARIES
  SWSCALE_INCLUDE_DIRS
)

